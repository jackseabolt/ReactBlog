var Comments = React.createClass({
	getInitialState: function(){
		return {
			comments: this.props.post.comments,
			comment: {
				content: '',
				author: '',
				post_id: this.props.post.id
			}
		}
	}, 
	handleContentChange: function(e){
		var newComment = this.state.comment;
		newComment.content = e.target.value;
		this.setState({ comment: newComment });
	},
	handleCreateComment: function(){
		var that = this; 
		console.log(this.state, "Hello");
		$.ajax({
			method: 'POST',
			data: { comment: that.state.comment },
			url: 'posts/' + that.props.post.id + '/comments.json',
			success: function(res){
				var newCommentList = that.state.comments; 
				newCommentList.push(res); 
				that.setState({ 
					comments: newCommentList,
					comment: {
						author: '',
						content: '',
						post_id: that.props.post.id
					} 
				});
			}
		});
	},
	handleDeleteComment(comment){
	    var commentsList = this.state.comments.filter(function(item) {
	      return comment.id !== item.id;
	    });
	    this.setState({comments: commentsList});
  	},
	render: function() {
		var that = this; 
		var commentBoard = that.state.comments ? that.state.comments.map(function(comment){
				return (
					<Comment comment={comment} key={comment.id} onDeleteComment={that.handleDeleteComment} />
				);
			}):null;
		return (
			<div>
					<br />
					<br />
					<div className="">
					
							<div className='form-group'>
								<textarea value={this.state.comment.content} onChange={this.handleContentChange} type='text' className='form-control' placeholder="Write a comment" ></textarea>
							</div>
							<div className='form-group'>
								<button type="button" onClick={this.handleCreateComment} className="btn btn-primary">Post</button>
							</div>

						<br />
						
						{ commentBoard }
					</div>
			</div>
		);
	}
});