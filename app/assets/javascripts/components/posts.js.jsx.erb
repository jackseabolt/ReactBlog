var Posts = React.createClass({
	getInitialState: function(){
		return {
			posts: this.props.posts,
			post: {
				title: '',
				author: '',
				content: '',
				video: ''
			}
		}
	},
	handlePostCreate: function(){
		var that = this;
		//console.log(this.state, "Hello");
		$.ajax({
			method: 'POST',
			data: { post: that.state.post },
			url: '/posts.json',
			success: function(res){
				var newPostList = that.state.posts;
				newPostList.push(res);
				that.setState({
					posts: newPostList,
					post: {
						title: '',
						author: '',
						content: '',
						video: ''
					}
				});
			} 
		});
	},
	handlePostDelete(post){
	    var postList = this.state.posts.filter(function(item) {
	      return post.id !== item.id;
	    });
	    this.setState({posts: postList});
  	},
	handleTitleChange(e) {
	    var newPost = this.state.post
	    newPost.title = e.target.value
	    this.setState({post: newPost});
  	},
  	handleAuthorChange(e) {
	    var newPost = this.state.post
	    newPost.author = e.target.value
	    this.setState({post: newPost});
  	},
  	handleContentChange(e) {
	    var newPost = this.state.post
	    newPost.content = e.target.value
	    this.setState({post: newPost});
  	},
  	handleVideoChange(e) {
  		var newPost = this.state.post
  		newPost.video = e.target.value
  		this.setState({ post: newPost });
  	},
	render: function(){	
			var that = this; 
			var postBoard = this.state.posts.map(function(post){
				return (
				<Post post={post} key={post.id} onDeletePost={that.handlePostDelete} />
				);
			});
		return (

			<div>

				<div className="modal fade" id="myModal" role="dialog">
				    <div className="modal-dialog">
				      	<div className="modal-content">
					        <div className="modal-header">
					          <button type="button" className="close" data-dismiss="modal">&times;</button>
					          <h4 className="modal-title">Create a Post</h4>
					        </div>
					        <div className="modal-body">
								<div className='form-group'>
									<input value={this.state.post.title} onChange={this.handleTitleChange} type='text' className='form-control' placeholder="Title" />
								</div>
								<div className='form-group'>
									<input value={this.state.post.author} onChange={this.handleAuthorChange} type='text' className='form-control' placeholder="Author" />
								</div>
								<div className='form-group'>
									<input value={this.state.post.video} onChange={this.handleVideoChange} type="text" className='form-control' placeholder="Video URL" />
								</div> 
								<div className='form-group'>
									<textarea value={this.state.post.content} onChange={this.handleContentChange} type="text"className="form-control" placeholder="Content" ></textarea>
								</div>
							</div>
					        <div className="modal-footer">
					          	<button type="button" onClick={this.handlePostCreate} className="btn btn-primary" data-dismiss="modal">Post</button>
					        </div>
				      	</div>
				    </div>
			  	</div>
				

				{ postBoard }
				
			</div>

		);
	}
});